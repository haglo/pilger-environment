https://blog.jdriven.com/2018/10/securing-spring-microservices-with-keycloak-part-1/

docker exec -it pilger_keycloak bash

alias kcadm.sh=/opt/jboss/keycloak/bin/kcadm.sh;

kcadm.sh config credentials --server http://localhost:8080/auth --realm master --user admin;

kcadm.sh create realms --set realm=pilger --set enabled=true;

# InternetAdresse http://localhost:8081/* von  meiner App, auf die sie horcht
# Url meiner App
# suite horcht auf 8085
kcadm.sh create clients --target-realm pilger --set clientId=pilgerApp --set directAccessGrantsEnabled=true --set publicClient=true --set 'redirectUris=["http://localhost:80/*"]' --id;

# Create the POWER_USER role
kcadm.sh create roles --target-realm pilger --set name=POWER_USER -o;

# Create haglo
kcadm.sh create users --target-realm pilger --set username=haglo --set email=h.g.gloeckler@gmx.de --set enabled=true --output --fields id,username;

# Set the password for haglo
kcadm.sh set-password --target-realm pilger --username haglo --new-password 123atgfd;

# Add the POWER_USER role to haglo
# We can only use the username if it is unique, else use --uid
kcadm.sh add-roles --target-realm pilger --uusername haglo --rolename POWER_USER;

http://localhost:8080/auth/realms/pilger/.well-known/openid-configuration

curl -s -X POST -H "Content-Type: application/x-www-form-urlencoded" -d "username=haglo&grant_type=password&client_id=pilgerApp&password=123atgfd" http://localhost:8080/auth/realms/pilger/protocol/openid-connect/token;

Ergebnis:
{
"access_token":"eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIwcGpLRWVCNmVZZUthUGF4NDJTTUxNVUl4Nm1CWHQyNUxENEFiVWM2Y1FJIn0.eyJqdGkiOiJlZjUzNWZhMi0xYmQ1LTRjNmEtODhmNi03YzYxM2M0Y2I3OTEiLCJleHAiOjE1NDg1MTI3MTksIm5iZiI6MCwiaWF0IjoxNTQ4NTEyNDE5LCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwODAvYXV0aC9yZWFsbXMvc3ByaW5nc2VydmljZSIsImF1ZCI6ImFjY291bnQiLCJzdWIiOiIxMmViZGNhMC1lOGIyLTQ4ZDYtYTFiYy00YWMwMzVmMWMwZjUiLCJ0eXAiOiJCZWFyZXIiLCJhenAiOiJsb2dpbi1hcHAiLCJhdXRoX3RpbWUiOjAsInNlc3Npb25fc3RhdGUiOiIzNmJiNTI2Ny00MDAzLTQ2NDgtODlkYS04NjljZmE2OWFjYjAiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MSJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsiUk9MRV9VU0VSIiwib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwicHJlZmVycmVkX3VzZXJuYW1lIjoidXNlcjEiLCJlbWFpbCI6InVzZXIxQHRlc3Rkb21haW4ubmwifQ.apqJ4n21ppIsI0TumaYilNg23wQHVH5t1inAgQtEFpeKiPKsPQU__sVJv1c5y68u15Ej2NgAhbsJaPLEaGmWxDHeCtdSvr481_TbW7W9Sp335mC8ugebZhPS-DrWHlhdhr0C6D1_wTyoA5eBNjjgwcxlGxp8guyBDsYqKuNPbJ8dmXlQ5JdkI_Tm4U8Q-IYnVUbscHR3zGhM67vI1d9xz066wna9GGAy7R-918pdlJFhAjDWiqrZ56lap14UJ9wuJHL6xtiTK6qZLdfbWu3goX4xW_Ns5AtriZ43jC8YrvUjQcfIp3PSixYv-vK79RrOpg5YnK3D6uJNkUqOqVB8MA","expires_in":299,"refresh_expires_in":1800,"refresh_token":"eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI2ZmFkOWU3YS0wMzc5LTQyYmEtOTNiOC01NzIzYTk5YzFmNTUifQ.eyJqdGkiOiJhZTJiZmZlYy1mZWU3LTQwZjMtOTg3YS1hYWFlZWU5OWU4YzgiLCJleHAiOjE1NDg1MTQyMjAsIm5iZiI6MCwiaWF0IjoxNTQ4NTEyNDIwLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwODAvYXV0aC9yZWFsbXMvc3ByaW5nc2VydmljZSIsImF1ZCI6Imh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9hdXRoL3JlYWxtcy9zcHJpbmdzZXJ2aWNlIiwic3ViIjoiMTJlYmRjYTAtZThiMi00OGQ2LWExYmMtNGFjMDM1ZjFjMGY1IiwidHlwIjoiUmVmcmVzaCIsImF6cCI6ImxvZ2luLWFwcCIsImF1dGhfdGltZSI6MCwic2Vzc2lvbl9zdGF0ZSI6IjM2YmI1MjY3LTQwMDMtNDY0OC04OWRhLTg2OWNmYTY5YWNiMCIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJST0xFX1VTRVIiLCJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJwcm9maWxlIGVtYWlsIn0.XJNi58w0n2ZEQ1U4P3cG78w_Ou_ij4ur5nkNbBx1CgU",
"token_type":"bearer",
"not-before-policy":0,
"session_state":"36bb5267-4003-4648-89da-869cfa69acb0",
"scope":"profile email"
}