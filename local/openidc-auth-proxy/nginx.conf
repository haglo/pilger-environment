events {
  worker_connections 128;
}

http {

  lua_package_path '~/lua/?.lua;;';
  resolver 127.0.0.11 ipv6=off;

  #lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
  #lua_ssl_verify_depth 5;

  lua_shared_dict discovery 1m;
  lua_shared_dict jwks 1m;

  server {
    listen 80;

    # Keycloak (Identity Provider)
    location /auth {
        proxy_pass http://keycloak:8080;
        proxy_set_header Host $http_host;
        proxy_pass_request_headers on;
    }

    # vaadin (Relying Party)
    location / {
        set $session_cookie_samesite off;
        access_by_lua_block {
            local opts = {
                redirect_uri_path = "/redirect_uri",
                discovery = "http://keycloak:8080/auth/realms/pilger/.well-known/openid-configuration",

                client_id = "PilgerApp",
                client_secret = "9dabb288-2db0-4f0e-991f-3a5b41872ef4",
				
                scope = "openid email",
                access_token_expires_leeway = 30,
                accept_none_alg = false,
                accept_unsupported_alg = false,
                renew_access_token_on_expiry = true,
                session_contents = {access_token=true, id_token=true}
            }

          local res, err = require("resty.openidc").authenticate(opts)

          if err then
            ngx.status = 500
            ngx.say(err)
            ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
          end

          ngx.req.set_header("Authorization", "Bearer " .. res.access_token)
          ngx.req.set_header("X-User", res.id_token.email)
		}
       proxy_pass http://localhost:8085;
    }
  }
}